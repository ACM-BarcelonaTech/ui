stages:
    - install
    - test
    - build
    - deploy  # dummy stage to follow the template guidelines
    - review
    - dast
    - staging
    - canary
    - production
    - incremental rollout 10%
    - incremental rollout 25%
    - incremental rollout 50%
    - incremental rollout 100%
    - performance
    - cleanup
  
variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  ROLLOUT_RESOURCE_TYPE: deployment
  STAGING_ENABLED: "true"
  POSTGRES_ENABLED: "false"
  AUTO_DEVOPS_BUILD_IMAGE_EXTRA_ARGS: --build-arg=CI_ENVIRONMENT_NAME=$CI_ENVIRONMENT_NAME

test:
  image: node:latest
  stage: test
  script:
  - if [[ ! -d node_modules ]];
    then
    yarn install --frozen-lockfile;
    fi  
  - yarn test
  cache:
    key:
      files:
        - package.json
        - yarn.lock
    paths:
      - node_modules/

build:
  stage: build
  image: "registry.gitlab.com/gitlab-org/cluster-integration/auto-build-image:v0.2.2"
  variables:
    DOCKER_TLS_CERTDIR: ""
  services:
    - docker:19.03.8-dind
  script:
    - |
      if [[ -z "$CI_COMMIT_TAG" ]]; then
        export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG}
        export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_SHA}
      else
        export CI_APPLICATION_REPOSITORY=${CI_APPLICATION_REPOSITORY:-$CI_REGISTRY_IMAGE}
        export CI_APPLICATION_TAG=${CI_APPLICATION_TAG:-$CI_COMMIT_TAG}
      fi
    - /build/build.sh
  rules:
    - if: '$CI_COMMIT_TAG || $CI_COMMIT_BRANCH'
  cache:
    key:
      files:
        - package.json
        - yarn.lock
    paths:
      - node_modules/
    policy: pull
  needs:
    - job: test

include:
  - template: Jobs/Deploy.gitlab-ci.yml
