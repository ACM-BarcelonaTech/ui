// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`switch experiment  switches the experiment to its initial values 1`] = `
Object {
  "backendStatus": Object {
    "2213badd497c54fb0703ce7bf369c131": Object {
      "error": false,
      "loading": false,
      "status": Object {
        "gem2s": Object {
          "completedSteps": Array [
            "DownloadGem",
            "PreProcessing",
            "EmptyDrops",
            "DoubletScores",
            "CreateSeurat",
            "PrepareExperiment",
            "UploadToAWS",
          ],
          "error": false,
          "paramsHash": "0ec8de4cd12ca902ee0e8fd7cd0a6c146929d64f",
          "startDate": "2021-11-16T16:07:58.999Z",
          "status": "SUCCEEDED",
          "stopDate": "2021-11-16T16:08:54.503Z",
        },
        "pipeline": Object {
          "completedSteps": Array [
            "ClassifierFilter",
            "CellSizeDistributionFilter",
            "MitochondrialContentFilter",
            "NumGenesVsNumUmisFilter",
            "DoubletScoresFilter",
            "DataIntegration",
            "ConfigureEmbedding",
          ],
          "error": false,
          "startDate": "2021-11-18T12:46:47.922Z",
          "status": "SUCCEEDED",
          "stopDate": "2021-11-18T12:47:40.389Z",
        },
        "worker": Object {
          "ready": true,
          "restartCount": 0,
          "started": true,
          "status": "Running",
        },
      },
    },
  },
  "cellInfo": Object {
    "focus": Object {
      "key": "louvain",
      "store": "cellSets",
    },
    "groupedTrack": "louvain",
    "selectedTracks": Array [
      "louvain",
    ],
  },
  "cellMeta": Object {
    "doubletScores": Object {
      "data": Array [],
      "error": false,
      "loading": true,
    },
    "mitochondrialContent": Object {
      "data": Array [],
      "error": false,
      "loading": true,
    },
  },
  "cellSets": Object {
    "error": false,
    "hidden": Set {},
    "hierarchy": Array [],
    "loading": true,
    "properties": Object {},
    "selected": Array [],
    "updatingClustering": false,
  },
  "componentConfig": Object {},
  "differentialExpression": Object {
    "comparison": Object {
      "group": Object {
        "between": Object {
          "basis": null,
          "cellSet": null,
          "compareWith": null,
        },
        "within": Object {
          "basis": null,
          "cellSet": null,
          "compareWith": null,
        },
      },
      "ordering": Object {
        "orderBy": "logFC",
        "orderDirection": "DESC",
      },
      "type": "within",
    },
    "properties": Object {
      "cellSets": Object {},
      "comparisonType": null,
      "data": Array [],
      "error": false,
      "loading": false,
      "total": 0,
    },
  },
  "embeddings": Object {},
  "experimentSettings": Object {
    "info": Object {
      "experimentId": null,
      "experimentName": null,
      "sampleIds": Array [],
    },
    "originalProcessing": Object {},
    "processing": Object {
      "meta": Object {
        "changedQCFilters": Set {},
        "completingStepError": false,
        "loading": false,
        "loadingSettingsError": false,
        "selectedConfigureEmbeddingPlot": "cellCluster",
      },
    },
  },
  "experiments": Object {
    "ids": Array [],
    "meta": Object {
      "error": false,
      "loading": false,
      "saving": false,
    },
  },
  "genes": Object {
    "expression": Object {
      "data": Object {},
      "error": false,
      "loading": Array [],
      "views": Object {},
    },
    "focused": undefined,
    "markers": Object {
      "error": false,
      "loading": false,
    },
    "properties": Object {
      "data": Object {},
      "loading": Array [],
      "views": Object {},
    },
    "selected": Array [],
  },
  "layout": Object {
    "panel": "Gene list",
    "windows": Object {
      "direction": "row",
      "first": Object {
        "direction": "column",
        "first": Object {
          "direction": "row",
          "first": "UMAP",
          "second": "Data Management",
          "splitPercentage": 60,
        },
        "second": "Heatmap",
        "splitPercentage": 50,
      },
      "second": "Genes",
      "splitPercentage": 70,
    },
  },
  "networkResources": Object {
    "environment": "staging",
  },
  "projects": Object {
    "ids": Array [],
    "meta": Object {
      "activeProjectUuid": null,
      "error": false,
      "loading": true,
      "saving": false,
    },
  },
  "samples": Object {
    "meta": Object {
      "error": false,
      "loading": false,
      "saving": false,
    },
  },
}
`;
